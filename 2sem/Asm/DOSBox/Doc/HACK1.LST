Turbo Assembler	 Version 4.1	    03/23/14 18:48:48	    Page 1
hack1.asm



      1	0000			     .model tiny
      2	0000			     .data
      3	0000  69 6E 70 2E 74 78	74+	     inp db 'inp.txt', 00h
      4	      00
      5	0008  52 65 61 64 69 6E	67+	     entr db 'Reading password from input file', 13, 10, 'Press	any key...', 13, 10, '$'
      6	      20 70 61 73 73 77	6F+
      7	      72 64 20 66 72 6F	6D+
      8	      20 69 6E 70 75 74	20+
      9	      66 69 6C 65 0D 0A	50+
     10	      72 65 73 73 20 61	6E+
     11	      79 20 6B 65 79 2E	2E+
     12	      2E 0D 0A 24
     13	003D  50 65 72 6D 69 73	73+	     den db 'Permission	denied$'
     14	      69 6F 6E 20 64 65	6E+
     15	      69 65 64 24
     16	004F  41 63 63 65 70 74	65+	     acp db 'Accepted$'
     17	      64 24
     18
     19	0058			     .code
     20					     org 100h
     21
     22	0100			     start:
     23	0100  B4 09			     mov ah, 09h
     24	0102  BA 0008r			     mov dx, offset entr
     25	0105  CD 21			     int 21h
     26
     27	0107  E8 002F			     call entrpsw
     28
     29	010A  B5 00			     mov ch, 00h
     30	010C  3A E9			     cmp ch, cl
     31	010E  74 0C			     je	ok
     32
     33	0110  B4 09			     mov ah, 09h
     34	0112  BA 003Dr			     mov dx, offset den
     35	0115  CD 21			     int 21h
     36	0117  B8 4C00			     mov ax, 4c00h
     37	011A  CD 21			     int 21h
     38
     39	011C				     ok:
     40	011C  B4 09				     mov ah, 09h
     41	011E  BA 004Fr				     mov dx, offset acp
     42	0121  CD 21				     int 21h
     43	0123  B8 4C00				     mov ax, 4c00h
     44	0126  CD 21				     int 21h
     45
     46	0128  47 6C 65 62 2C 6B	75+	     psw db 'Gleb,kushai hleb$'
     47	      73 68 61 69 20 68	6C+
     48	      65 62 24
     49
     50	0139			     entrpsw:
     51	0139  55			     push bp
     52	013A  83 EC 10			     sub sp, 10h
     53	013D  8B EC			     mov bp, sp
     54
     55					     ;getch:
     56					     ;	     mov ah, 00h
     57					     ;	     int 16h
Turbo Assembler	 Version 4.1	    03/23/14 18:48:48	    Page 2
hack1.asm



     58					     ;	     cmp al, 0dh
     59					     ;	     je	enough
     60					     ;	     mov byte ptr [bp +	si], al
     61					     ;	     inc si
     62					     ;	     jmp getch
     63
     64	013F  B4 00			     mov ah, 00h									    +
     65				     ;
     66	0141  CD 16			     int 16h										    +
     67				     ; "Press any key"
     68
     69	0143  B8 3D00			     mov ax, 3d00h								     ;
     70	0146  BA 0000r			     mov dx, offset inp								     ; Open +
     71				     input file
     72	0149  CD 21			     int 21h										    +
     73				     ;
     74
     75	014B  8B D5			     mov dx, bp
     76	014D  8B D8			     mov bx, ax
     77	014F  B9 0001			     mov cx, 1
     78	0152			     getch:
     79	0152  B4 3F			     mov ah, 3fh									    +
     80				     ; Read it
     81	0154  CD 21			     int 21h										    +
     82				     ; byte
     83	0156  3B C1			     cmp ax, cx										    +
     84				     ; by byte
     85	0158  75 03			     jne enough										    +
     86				     ;
     87
     88	015A  42			     inc dx
     89	015B  EB F5			     jmp getch
     90
     91	015D				     enough:
     92	015D  B9 0128r				     mov cx, offset psw
     93	0160  51				     push cx
     94	0161  0E				     push cs
     95	0162  E8 0013				     call strlen
     96
     97	0165  51				     push cx
     98	0166  B9 0128r				     mov cx, offset psw
     99	0169  51				     push cx
    100	016A  0E				     push cs
    101	016B  55				     push bp
    102	016C  16				     push ss
    103	016D  E8 0021				     call memcmp
    104	0170  83 C4 0E				     add sp, 14
    105
    106	0173  83 C4 10			     add sp, 10h
    107	0176  5D			     pop bp
    108	0177  C3		     ret
    109
    110	0178			     strlen:
    111	0178  55			     push bp
    112	0179  8B EC			     mov bp, sp
    113
    114	017B  8E 46 04			     mov es, word ptr ss:[bp + 4]
Turbo Assembler	 Version 4.1	    03/23/14 18:48:48	    Page 3
hack1.asm



    115	017E  8B 7E 06			     mov di, word ptr ss:[bp + 6]
    116
    117	0181  B4 00			     mov ah, 00h
    118	0183  B0 24			     mov al, '$'
    119	0185  B9 FFFF			     mov cx, 0ffffh
    120	0188  F2> AE			     repne scasb
    121	018A  F7 D9			     neg cx
    122	018C  83 E9 02			     sub cx, 2
    123
    124	018F  5D			     pop bp
    125	0190  C3		     ret
    126
    127	0191			     memcmp:
    128	0191  55			     push bp
    129	0192  8B EC			     mov bp, sp
    130
    131	0194  8E 46 04			     mov es, ss:[bp + 4]
    132	0197  8B 7E 06			     mov di, ss:[bp + 6]
    133	019A  8E 5E 08			     mov ds, ss:[bp + 8]
    134	019D  8B 76 0A			     mov si, ss:[bp + 10]
    135	01A0  8B 4E 0C			     mov cx, ss:[bp + 12]
    136
    137	01A3  83 F9 00			     cmp cx, 0000h
    138	01A6  74 08			     je	above
    139
    140	01A8  F3> A6			     repe cmpsb
    141
    142	01AA  77 04			     ja	above
    143	01AC  74 06			     je	equal
    144	01AE  72 08			     jb	below
    145
    146	01B0				     above:
    147	01B0  B1 01				     mov cl, 01h
    148	01B2  5D				     pop bp
    149	01B3  C3			     ret
    150
    151	01B4				     equal:
    152	01B4  B1 00				     mov cl, 00h
    153	01B6  5D				     pop bp
    154	01B7  C3			     ret
    155
    156	01B8				     below:
    157	01B8  B1 FF				     mov cl, 0ffh
    158	01BA  5D				     pop bp
    159	01BB  C3			     ret
    160
    161				     end start
Turbo Assembler	 Version 4.1	    03/23/14 18:48:48	    Page 4
Symbol Table




Symbol Name			  Type	 Value

??DATE				  Text	 "03/23/14"
??FILENAME			  Text	 "hack1	  "
??TIME				  Text	 "18:48:48"
??VERSION			  Number 040A
@32BIT				  Text	 0
@CODE				  Text	 DGROUP
@CODESIZE			  Text	 0
@CPU				  Text	 0101H
@CURSEG				  Text	 _TEXT
@DATA				  Text	 DGROUP
@DATASIZE			  Text	 0
@FILENAME			  Text	 HACK1
@INTERFACE			  Text	 000H
@MODEL				  Text	 1
@STACK				  Text	 DGROUP
@WORDSIZE			  Text	 2
ABOVE				  Near	 DGROUP:01B0
ACP				  Byte	 DGROUP:004F
BELOW				  Near	 DGROUP:01B8
DEN				  Byte	 DGROUP:003D
ENOUGH				  Near	 DGROUP:015D
ENTR				  Byte	 DGROUP:0008
ENTRPSW				  Near	 DGROUP:0139
EQUAL				  Near	 DGROUP:01B4
GETCH				  Near	 DGROUP:0152
INP				  Byte	 DGROUP:0000
MEMCMP				  Near	 DGROUP:0191
OK				  Near	 DGROUP:011C
PSW				  Byte	 DGROUP:0128
START				  Near	 DGROUP:0100
STRLEN				  Near	 DGROUP:0178

Groups & Segments		  Bit Size Align  Combine Class

DGROUP				  Group
  _DATA				  16  0058 Word	  Public  DATA
  _TEXT				  16  01BC Word	  Public  CODE
